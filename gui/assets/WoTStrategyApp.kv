#: kivy 2.0.0
#: import ew kivy.uix.effectwidget
#: set MAX_HP_BARS 3

<SingleHPBar>:
    canvas:
        Color:
            rgb: 0, 1, 0
        Rectangle:
            pos: self.pos
            size: self.size


<HPBar>:
    hex_size: 25
    max_hp: 0
    hp: 0
    size: self.hex_size * 1.5 * self.max_hp / MAX_HP_BARS, self.hex_size * 1.5 * 0.3
    layout: layout_id
    offset: (self.hex_size * 2 - self.width) / 2
    canvas:
        Color:
            rgba: 1, 1, 1, 0.5
        Rectangle:
            pos: self.x + self.offset, self.y
            size: self.size
    BoxLayout:
        id: layout_id
        pos: self.parent.x + self.parent.offset, self.parent.y
        size: self.parent.size
        orientation: 'horizontal'
        padding: self.height * 0.15
        spacing: self.height * 0.25


<Entity>:
    hex_size: 25
    x_coord: 0
    y_coord: 0
    x: self.x_coord * self.hex_size - self.width * 0.5
    y: self.y_coord * self.hex_size - self.height * 0.5


<Vehicle>:
    hp_bar: bar_id
    size: self.hex_size * 2, self.hex_size * 2 * 0.866025
    color: 1, 0, 0
    file: "assets/MT.png"
    canvas:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.center_x - self.width/2, self.center_y - self.height/2
            size: self.size
            source: self.file

    HPBar:
        id: bar_id
        x: self.parent.x
        y: self.parent.y - self.parent.height * 0.3


<Hex>:
    side: self.hex_size
    size: self.side * 2, self.side * 0.866025 * 2
    color: 0.5, 0.5, 0.5
    canvas:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.x + self.side * 0.5, self.y
            size: self.side, self.side * 0.866025 * 2
        Triangle:
            points: self.x + self.side * 0.5, self.y, self.x, self.y + self.side * 0.866025, self.x + self.side * 0.5, self.y + self.side * 0.866025 * 2
        Triangle:
            points: self.x + self.side * 1.5, self.y + self.side * 0.866025 * 2, self.x + self.side * 2, self.y + self.side * 0.866025, self.x + self.side * 1.5, self.y
        Color:
            rgb: 0, 0, 0
        Line:
            points: self.x + self.side * 0.5, self.y, self.x, self.y + self.side * 0.866025, self.x + self.side * 0.5, self.y + self.side * 0.866025 * 2, self.x + self.side * 1.5, self.y + self.side * 0.866025 * 2, self.x + self.side * 2, self.y + self.side * 0.866025, self.x + self.side * 1.5, self.y
            width: 1
            close: True


<SpecialHex>:
    size: self.hex_size * 2, self.hex_size * 0.866025 * 2
    color: 1, 1, 1
    uses: 0
    file: ""
    canvas:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.pos
            size: self.size
            source: self.file


<MyScatter>:
    hex_size: 25

<MyLabel>:
    color: 0,0,0, 1
    back_color: self.parent.back_color
    halign: 'center'
    size_hint: 1, 1
    text_size: self.width, None
    shorten: True
    padding_y: 30
    canvas.before:
        Color:
            rgba: self.back_color
        Rectangle:
            pos: self.pos
            size: self.size

<PlayerLayout>:
    orientation: 'horizontal'
    spacing: 5
    color: 1, 1, 1, 1
    player_id: 0
    player_name: ""
    capture_points: 0
    kill_points: 0
    back_color: 0.5,0.5,0.5,1
    MyLabel:
        text: str(self.parent.player_id)
        size_hint_x: 0.1
        color: self.parent.color
        back_color: self.back_color
    MyLabel:
        text: self.parent.player_name
        size_hint_x: 0.4
        color: self.parent.color
        back_color: self.back_color
    MyLabel:
        text: str(self.parent.capture_points)
        size_hint_x: 0.25
        color: self.parent.color
        back_color: self.back_color
    MyLabel:
        text: str(self.parent.kill_points)
        size_hint_x: 0.25
        color: self.parent.color
        back_color: self.back_color

<GameScreenRoot>:
    hex_size: 25
    scatter: scatter_id
    effects: ew.FXAAEffect(),
    info_layout: layout
    turn_label: turn_label_id
    BoxLayout:
        orientation: 'vertical'
        spacing: 10
        id: layout
        size_hint: 0.3, 0.2
        back_color: 1,1,1,1
        MyLabel:
            size_hint_x: 0.1
            id: turn_label_id
        BoxLayout:
            orientation: 'horizontal'
            spacing: 5
            back_color: 1,1,1,1
            MyLabel:
                text: 'ID'
                size_hint_x: 0.1
            MyLabel:
                text: 'Player'
                size_hint_x: 0.4
            MyLabel:
                text: 'Capture'
                size_hint_x: 0.25
            MyLabel:
                text: 'Kill'
                size_hint_x: 0.25
    MyScatter:
        id: scatter_id

<GameOverScreenRoot>:
    message_label: message_label_id
    Label:
        text: "sample_text"
        id: message_label_id
        color: 1,1,1,1
        center: self.parent.center_x, self.parent.center_y + (self.parent.height / 5)
        valign: 'center'
    Button:
        text: 'OK'
        id: button_id
        center: self.parent.center_x, self.parent.center_y - (self.parent.height / 5)
        size_hint: 0.2, 0.1
        on_press: app.stop()


<GameScreen>:
    game_screen_root: game_screen_id
    GameScreenRoot:
        id: game_screen_id

<GameOverScreen>:
    game_over_screen_root: game_over_screen_id
    GameOverScreenRoot:
        id: game_over_screen_id
